# nginx config to run prestashop 1.6.x
# the latest commit is available at https://github.com/juliyvchirkov/nginx-prestashop
#
# this port is initially based on original settings & restrictions from prestashop bundle aimed at apache httpd
# 
# v2 09/28/2017 https://github.com/juliyvchirkov/nginx-prestashop/releases/tag/v2.0
#
# v2 has been completely revised & improved. the ruleset has been rearranged in native nginx way
# to utilize its power, thus forcing pages to load up to 5-10x faster
#
# [nb] the last rule of this config requires some items to be preconfigured at http section of nginx.conf & php-fpm daemon pool config,
#      please refer to the https://github.com/juliyvchirkov/nginx-prestashop/blob/v2.0/README.md details 
#

        location ~ "^/api/?(.*)$" {
         
            try_files $uri /webservice/dispatcher.php?url=$1;
            
        }
        
        location ~* "^/(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
 
            return 301 /img/p/$1/$1$2.jpg; 
   
        }

        location ~* "^/(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$1$2$3.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$1$2$3$4.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg;
    
        }

        location ~* "^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
    
            return 301 /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg;
    
        }

        location ~* "^/c/(\d+)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
 
            return 301 /img/c/$1$2.jpg; 
   
        }

        location ~* "^/c/(\d+)(-\w+_\w+)?(?:-\d+)?/.+\.jpg$" {
 
            return 301 /img/c/$1$2.jpg; 
   
        }

        location ~* "^/(?:c/)?(\d+)(-\d+)?(_\w+)(?:-\d+)?/.+\.jpg$" {
 
            return 301 /img/c/$1$2$3.jpg; 
   
        }

        location ~ "^/[a-z]{2}/index.php" {
    
            return 301 /index.php$is_args$args;
    
        }

        location ~ "^/(j|cs)s/([^/]+)\.(?:j|cs)s$" {
        
            try_files $uri /$1s/retro-compat.$1s.php?file=$2.$1s;
            
            expires epoch;
            add_header Pragma "no-cache";
            add_header Cache-Control "no-cache, no-store, must-revalidate";

        }
        
        
        location ~* "/img/cms/.+\.(jpg|jpeg|gif|png|bmp|tiff|svg|pdf|mov|mpeg|mp4|avi|mpg|wma|flv|webm)$" {
            
            allow all;
        
        }
        
        location ~ "^/img/cms/" {
            
            deny all;
        
        }


        location ~ "\.tpl$" {

            deny all; 

        }
        
        location ~ "^/upload/.+\.php$" {
        
            deny all;
        
        }

        location ~ "^/backoffice/(?:backups|export|import|tabs)/" {
            
            deny all; 
            
        }

        location ~ "^/(classes|config|download|log|override|tools)/" { 
                    
            deny all;
                    
        }
        
        location / {

            try_files $uri $uri/ /index.php$is_args$args;
            
        }
        
        set $presta404page "/index.php?controller=404";
        
        error_page 404 $presta404page;
        error_page 500 /error500.html;

        location ~ "\.php$" {
                
            try_files $uri =404 $presta404page;
            
            fastcgi_intercept_errors on;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_buffers 8 256k;
            fastcgi_buffer_size 256k;
            fastcgi_send_timeout 30;
            fastcgi_read_timeout 30;
            include fastcgi_params;
            fastcgi_index index.php;
            fastcgi_pass php;
    
        }
